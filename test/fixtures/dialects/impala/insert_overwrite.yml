# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 558acdaa5ca55c72355fb0172cca11fe7f35cd0f211204a892da40fda25e7251
file:
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: OVERWRITE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: OVERWRITE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - keyword: PARTITION
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - end_bracket: )
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col3
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: OVERWRITE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - keyword: PARTITION
    - bracketed:
      - start_bracket: (
      - column_reference:
          naked_identifier: col1
      - comparison_operator:
          raw_comparison_operator: '='
      - numeric_literal: '1'
      - comma: ','
      - column_reference:
          naked_identifier: col2
      - comparison_operator:
          raw_comparison_operator: '='
      - quoted_literal: "'a'"
      - end_bracket: )
    - select_statement:
        select_clause:
          keyword: SELECT
          select_clause_element:
            column_reference:
              naked_identifier: col3
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: OVERWRITE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - start_square_bracket: '['
    - keyword: SHUFFLE
    - end_square_bracket: ']'
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: OVERWRITE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - start_square_bracket: '['
    - keyword: NOSHUFFLE
    - end_square_bracket: ']'
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
- statement:
    insert_statement:
    - keyword: INSERT
    - keyword: OVERWRITE
    - keyword: TABLE
    - table_reference:
      - naked_identifier: db
      - dot: .
      - naked_identifier: foo
    - keyword: IF
    - keyword: NOT
    - keyword: EXISTS
    - select_statement:
        select_clause:
        - keyword: SELECT
        - select_clause_element:
            column_reference:
              naked_identifier: col1
        - comma: ','
        - select_clause_element:
            column_reference:
              naked_identifier: col2
        from_clause:
          keyword: FROM
          from_expression:
            from_expression_element:
              table_expression:
                table_reference:
                - naked_identifier: db
                - dot: .
                - naked_identifier: foo2
- statement_terminator: ;
